@model IEnumerable<MPB_PORTAL_WEB_APP.Models.Cases>
@{
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
    ViewData["Title"] = "Cases List";

    // Pagination Variables
    int pageNumber = ViewData["PageNumber"] as int? ?? 1;
    int pageSize = ViewData["PageSize"] as int? ?? 10;
    int totalRecords = ViewData["TotalRecords"] as int? ?? 0;
    int totalPages = (int)Math.Ceiling((double)totalRecords / pageSize);
}

<h2>Cases List</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Filter Form -->
<form method="get" class="mb-4">
    <div class="row g-3">
        <div class="col-md-3">
            <input type="text" name="clientName" class="form-control" placeholder="Client Name" value="@ViewData["ClientName"]">
        </div>
        <div class="col-md-3">
            <input type="text" name="description" class="form-control" placeholder="Description" value="@ViewData["Description"]">
        </div>
        <div class="col-md-3">
            <select name="assignedStaffId" class="form-select">
                <option value="">All Staff</option>
                @foreach (var staff in ViewBag.StaffMembers)
                {
                    <option value="@staff.Id" selected="@(ViewData["AssignedStaffId"]?.ToString() == staff.Id ? "selected" : null)">@staff.FullName</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <select name="status" class="form-select">
                <option value="">All Status</option>
                <option value="pending" selected="@(ViewData["Status"]?.ToString() == "pending" ? "selected" : null)">Pending</option>
                <option value="in_progress" selected="@(ViewData["Status"]?.ToString() == "in_progress" ? "selected" : null)">In Progress</option>
                <option value="resolved" selected="@(ViewData["Status"]?.ToString() == "resolved" ? "selected" : null)">Resolved</option>
            </select>
        </div>
        <div class="col-md-2">
            <input type="date" name="startDateFrom" class="form-control" value="@ViewData["StartDateFrom"]">
        </div>
        <div class="col-md-2">
            <input type="date" name="startDateTo" class="form-control" value="@ViewData["StartDateTo"]">
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary">Filter</button>
            <a href="@Url.Action("Index", "Cases")" class="btn btn-secondary">Reset</a>
        </div>
    </div>
</form>

<a href="@Url.Action("Create", "Cases")" class="btn btn-primary mb-3">Create New Case</a>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>#</th>
            <th>Client Name</th>
            <th>Description</th>
            <th>Assigned Staff</th>
            <th>Status</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.ClientName</td>
                <td>@Html.Raw(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)</td>
                <td>@item.AssignedStaff?.FullName</td>
                <td>
                    <span class="badge
                        @(item.Status == "pending" ? "bg-warning text-dark" :
                          item.Status == "in_progress" ? "bg-info" :
                          item.Status == "resolved" ? "bg-success" : "bg-secondary")">
                        @item.Status
                    </span>
                </td>
                <td>@item.StartDate.ToString("yyyy-MM-dd")</td>
                <td>@(item.EndDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                <td>
                    <a href="@Url.Action("Show", "Cases", new { id = item.Id })" class="btn btn-info btn-sm">View</a>
                    <a href="@Url.Action("Edit", "Cases", new { id = item.Id })" class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Delete", "Cases", new { id = item.Id })" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@if (totalPages > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == pageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = pageSize })">@i</a>
                </li>
            }
        </ul>
    </nav>
}
