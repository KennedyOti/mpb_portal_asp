@{
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
}

<h2>Statistics and Analytics</h2>

<div class="row">
    <div class="col-md-6">
        <h5>Total Activities per Month</h5>
        <canvas id="activitiesChart"></canvas>
    </div>
    <div class="col-md-6">
        <h5>Case Status Breakdown</h5>
        <canvas id="caseStatusChart"></canvas>
    </div>
</div>
<div class="row mt-4">
    <div class="col-md-6">
        <h5>Most Active Cities</h5>
        <div id="citiesMap" style="height:400px;"></div>
    </div>
    <div class="col-md-6">
        <h5>Most Active Organizations</h5>
        <canvas id="organizationsChart"></canvas>
    </div>
</div>
<h5 class="mt-4">Download Reports</h5>
<form method="post" asp-action="DownloadReport">
    <select name="type" class="form-control">
        <option value="csv">CSV</option>
        <option value="excel">Excel</option>
        <option value="pdf">PDF</option>
    </select>
    <button type="submit" class="btn btn-primary mt-3">Download Report</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script>
    const activitiesData = @Html.Raw(Json.Serialize(ViewBag.ActivitiesPerMonth));
    const caseStatuses = @Html.Raw(Json.Serialize(ViewBag.CaseStatuses));
    const citiesData = @Html.Raw(Json.Serialize(ViewBag.MostActiveCities));
    const orgsData = @Html.Raw(Json.Serialize(ViewBag.MostActiveOrganizations));

    // Activities Chart
    new Chart(document.getElementById('activitiesChart').getContext('2d'), {
        type: 'line',
        data: {
            labels: activitiesData.map(d => `Month ${d.month}/${d.year}`),
            datasets: [{
                label: 'Activities',
                data: activitiesData.map(d => d.total),
                borderColor: '#36A2EB',
                fill: false
            }]
        },
        options: { responsive: true }
    });

    // Case Status Chart
    new Chart(document.getElementById('caseStatusChart').getContext('2d'), {
        type: 'pie',
        data: {
            labels: caseStatuses.map(c => c.status),
            datasets: [{
                data: caseStatuses.map(c => c.total),
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
            }]
        },
        options: { responsive: true }
    });

    // Organizations Chart
    new Chart(document.getElementById('organizationsChart').getContext('2d'), {
        type: 'bar',
        data: {
            labels: orgsData.map(o => o.organization),
            datasets: [{
                label: 'Activities',
                data: orgsData.map(o => o.total),
                backgroundColor: '#4BC0C0'
            }]
        },
        options: { responsive: true, scales: { y: { beginAtZero: true } } }
    });

    // Leaflet Map
    const map = L.map('citiesMap').setView([0, 0], 2);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '© OpenStreetMap' }).addTo(map);

    citiesData.forEach(city => {
        L.marker([city.latitude || 0, city.longitude || 0]).addTo(map)
         .bindPopup(`${city.location}: ${city.total} activities`);
    });
</script>
